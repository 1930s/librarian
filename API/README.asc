= BookDroid
:author: Michael F Evans
:BaseURL: http://saxicola.ddns.me.uk/api.librarian/book-and.php?

An android app to catalogue your books.  

It will interface with librarian if it is availabe and your device is connected to your LAN.  Books are added by scanning the barcode using the zbar libraries.  The database will be stored locally on the SIM card and updated from a database whenever the device is started and your LAN database server is accessable.  If no network is available newly scanned book ISBNs will be stored and the book details update when a network becomes available.

This project was created with: 
android create project --target 11 --name book_and --path $(pwd) --activity bookand --package com.mutant_ant

== The RESTful API

The API will be accessed via some URL an example data request is 
{BaseURL}action=get_books
which returns a json object with book data.

Initial functionality is to get books and ebooks for display on the android device.  It should be possible to add books using the same API providing sufficient authentication and security is built in.

=== API Syntax

The base URL is: {BaseURL}

- action=getbooks Get all the paper books
- action=getebooks Get all the e-books

Using additional &parameters to modify the data:

- &titles Just the titles
- &authors Just the authors
- &lent Books that have been lent

For more active querying:

- &title_search=title Search by title
- &author_search=author Search by author

== Database

The database is the same as used by librarian (GitHuB ref) and is currently not idealised.  The authors table is not in the correct form for efficient selection and sorting.  Authors are stored in both the books table and the authors table as received from the IMDB lookup, i.e. as a string in the form as seen on the book cover.  This is bad and was a compromise while I sorted out the authors storage dilemma, partucularly relating to multiple authors.  Single author <--> many_book relations are obviously trivial.  See 

http://stackoverflow.com/questions/13353231/how-write-down-to-database-multiple-authors-in-simple-books-table

for more information as to why it's bad and some sugessted solutions.  I never really solved the issue for librarian as it fitted my needs at the time.  A new authors table and link table have been created that need to be populated from the current data.

A current typical select for book and author looks like:

[source,sql]
SELECT title, author_id, authors.name FROM books LEFT JOIN authors ON (books.author_id  = authors.id);

Update:  New database schema devised and implemented and data transferred.  To get books and authors we now use:
[source,sql]
SELECT b.title, GROUP_CONCAT(a.author_first, " ", a.author_last) AS Authors FROM new_books b INNER JOIN
books_to_authors ba ON (b.id = ba.book_id) INNER JOIN book_authors a ON (ba.author_id = a.author_id)
GROUP BY b.title ORDER BY author_last, author_ordinal;

Which is more complicated but we now have a proper TNF database schema.  The ols tables still exists as librarian still uses it so a some Python-fu is used to update the new tables each time a new book is added.  This way librarian can remain, mosrlt, unmodified.



To correct this I need to select the current data and with some Python-fu populate the new tables, which should be relatively straight forward, but also the librarian code would need to be updated to use the new schema.  Alternativly the patch code can be run each time a new book is added to convert the new book to use the new storage schema.  Librarian could continue to use the old code until such time permits to overhall the code.

Phew!

=== E-books

The e-book data used by librarian is the DB as used by Calibre.  The same selects as librarian can be used to retrive data from the DB.


== References

- http://www.php.net/manual/en/pdostatement.fetch.php
- http://stackoverflow.com/questions/13353231/how-write-down-to-database-multiple-authors-in-simple-books-table



